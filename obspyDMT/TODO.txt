check:
IRIS_network ---> IRIS_available
IRIS_network ---> IRIS_waveform

all depths either positive or negative




===================================================
Continuous request:
ERROR:
------------------------
IRIS for event-24 is Done
Total Time: 0:00:05.231861
------------------------
Check the availablity of the IRIS stations
Start creating a list for bulk request

IRIS-bulkfile for event: 25/25 ---> DONE
Time for checking the availability: 0:00:01.691826
Traceback (most recent call last):
  File "./obspyDMT.py", line 4239, in <module>
    main()
  File "./obspyDMT.py", line 4204, in main
    status = obspyDMT()
  File "./obspyDMT.py", line 149, in obspyDMT
    IRIS_network(input)
  File "./obspyDMT.py", line 1394, in IRIS_network
    IRIS_waveform(input, Stas_iris, i, type='save')
  File "./obspyDMT.py", line 1526, in IRIS_waveform
    bulk_smgrs = client_fdsn.get_waveforms_bulk(bulk_list)
  File "/home/hosseini/local/src/obspy/obspy/fdsn/client.py", line 749, in get_waveforms_bulk
    data=bulk.encode('ascii', 'strict'))
  File "/home/hosseini/local/src/obspy/obspy/fdsn/client.py", line 952, in _download
    raise FDSNException("No data available for request.")
obspy.fdsn.header.FDSNException: No data available for request.



===================================================
LION:

import obspy
from obspy.fdsn import Client
client = Client('IRIS')
inv = client.get_stations(network="TA", station="136A", location="*", channel="BH*")
inv = client.get_stations(network="TA", station="136A", location="*", channel="BH*", level="response")
print inv[0][0][0].response
st = obspy.read()
st.attach_response(inv)
st[0].stats.response
st.remove_response()
st.plot()
print inv[0][0][0].response
inv[0][0][0].response.response_stages[0]
print inv[0][0][0].response.response_stages[0]
print inv[0][0][0].response.response_stages[0].Poles
print inv[0][0][0].response.response_stages[0].pole
print inv[0][0][0].response.response_stages[0].poles
print inv[0][0][0].response.response_stages[0].zeros
print inv[0][0][0].response.response_stages[0].gain
resp = inv[0][0][0].response
print resp
resp.response_stages[2]
resp.response_stages[2].__dict__
resp.response_stages[2].__dict__
resp.response_stages[2].__dict__
print resp
print resp.response_stages[1]
print resp.response_stages[0]
hist




from obspy import read
st = read('KZ.ZRN..BHZ')
st
print st
print st[0]
print st[0].stats
st = read('KZ.ZRN..BHZ', details=True)
print st
st[0].stat
st[0].stats
print st[0].stats
print st[0].stats.mseed
print st[0].stats.mseed.__dict__
st[0].stats.mseed.__dict__
hist




hosseini@kasra:~/local/src/obspy$ git remote -v
origin	https://github.com/obspy/obspy.git (fetch)
origin	https://github.com/obspy/obspy.git (push)

hosseini@kasra:~/local/src/obspy$ git remote add lion https://github.com/krischer/obspy.git

hosseini@kasra:~/local/src/obspy$ git remote -v
lion	https://github.com/krischer/obspy.git (fetch)
lion	https://github.com/krischer/obspy.git (push)
origin	https://github.com/obspy/obspy.git (fetch)
origin	https://github.com/obspy/obspy.git (push)

hosseini@kasra:~/local/src/obspy$ git fetch lion
remote: Counting objects: 890, done.
remote: Compressing objects: 100% (387/387), done.
remote: Total 890 (delta 586), reused 686 (delta 501)
Receiving objects: 100% (890/890), 536.24 KiB | 486 KiB/s, done.
Resolving deltas: 100% (586/586), done.
From https://github.com/krischer/obspy
 * [new branch]      arraytools -> lion/arraytools
 * [new branch]      del_res_id -> lion/del_res_id
 * [new branch]      download_helpers -> lion/download_helpers
 * [new branch]      evalresp_fix -> lion/evalresp_fix
 * [new branch]      events_warning -> lion/events_warning
 * [new branch]      f2py       -> lion/f2py
 * [new branch]      fix_fullseed_reading_issue -> lion/fix_fullseed_reading_issue
 * [new branch]      fix_mseed_reading_issue -> lion/fix_mseed_reading_issue
 * [new branch]      gh-pages   -> lion/gh-pages
 * [new branch]      ipython_map -> lion/ipython_map
 * [new branch]      master     -> lion/master
 * [new branch]      method_chaining -> lion/method_chaining
 * [new branch]      obspy.fdsn -> lion/obspy.fdsn
 * [new branch]      py3k       -> lion/py3k
 * [new branch]      releases   -> lion/releases
 * [new branch]      seg2_fix   -> lion/seg2_fix
 * [new branch]      stationxml_improvements -> lion/stationxml_improvements
 * [new branch]      taper_fixes -> lion/taper_fixes
 * [new branch]      taup_fix   -> lion/taup_fix

hosseini@kasra:~/local/src/obspy$ git checkout -t lion/download_helpers 
Branch download_helpers set up to track remote branch download_helpers from lion.
Switched to a new branch 'download_helpers'

hosseini@kasra:~/local/src/obspy$ git branch
* download_helpers
  master
